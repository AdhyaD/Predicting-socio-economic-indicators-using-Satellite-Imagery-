{"files":[{"id":"31ed4491-e71a-4143-b811-461ab0d6792f","name":"Code","type":"server_js","source":"/**\n * Function to mask clouds based on the pixel_qa band of Landsat SR data.\n * @param {ee.Image} image Input Landsat SR image\n * @return {ee.Image} Cloudmasked Landsat image\n */\nvar cloudMaskL457 \u003d function(image) {\n  var qa \u003d image.select(\u0027pixel_qa\u0027);\n  // If the cloud bit (5) is set and the cloud confidence (7) is high\n  // or the cloud shadow bit is set (3), then it\u0027s a bad pixel.\n  var cloud \u003d qa.bitwiseAnd(1 \u003c\u003c 5)\n                  .and(qa.bitwiseAnd(1 \u003c\u003c 7))\n                  .or(qa.bitwiseAnd(1 \u003c\u003c 3));\n  // Remove edge pixels that don\u0027t occur in all bands\n  var mask2 \u003d image.mask().reduce(ee.Reducer.min());\n  return image.updateMask(cloud.not()).updateMask(mask2);\n};\n\n\n\nvar year_list \u003d [\u00272011\u0027];\n\n\n\n//var state_list \u003d[\u0027Madhya Pradesh\u0027,\u0027Maharashtra\u0027,\u0027Haryana\u0027,\u0027Punjab\u0027,\u0027Karnataka\u0027,\u0027Jharkhand\u0027,\u0027Andhra Pradesh\u0027,\u0027Telangana\u0027,\u0027Chhattisgarh\u0027,\u0027Uttar Pradesh\u0027];\n\nvar state_list \u003d [\u0027Uttarakhand\u0027,\u0027Tripura\u0027,\u0027Tamil Nadu\u0027,\u0027Sikkim\u0027,\u0027Kerala\u0027,\u0027Gujarat\u0027,\u0027Bihar\u0027,\u0027Odisha\u0027,\u0027Rajasthan\u0027,\u0027Manipur\u0027,\u0027Mizoram\u0027,\u0027Assam\u0027]\n\n\n\nvar bands \u003d [\u0027B3\u0027, \u0027B2\u0027, \u0027B1\u0027];\nvar india \u003d ee.FeatureCollection(\u0027ft:1UDdgOCf8DoRJ9bVm-UVbR6CqxtkJToLQjTFd0r0Z\u0027,\u0027geometry\u0027)\n    .filter(ee.Filter.eq(\u0027Name\u0027,\u0027India\u0027))\n    .geometry();\n\n\n\n \n\n\n\nfor (var i in state_list) {\n  \n  var state_name \u003d state_list[i];\n  \n  var state \u003d ee.FeatureCollection(\u0027users/hariomahlawat/India_States\u0027)\n    .filter(ee.Filter.eq(\u0027ST_NM\u0027,state_name));\n    \n    \n  for (var j in year_list)\n  {\n     var year \u003d year_list[j];\n     var str \u003d state_name.replace(/\\s/g,\u0027\u0027);\n   \n    var state_image \u003d ee.ImageCollection(\u0027LANDSAT/LE07/C01/T1_SR\u0027)\n    .filterBounds(state)\n    .filterDate(\u00272011-01-01\u0027,\u00272011-12-31\u0027)\n    .filter(ee.Filter.lt(\u0027CLOUD_COVER\u0027,5))\n    .sort(\u0027CLOUD_COVER\u0027)\n    .map(cloudMaskL457);\n\n    \n    state_image \u003d state_image.select(bands).min();\n\n    print(state_image)     \n   \n   \n   \n     \n      Export.image.toDrive({\n        image: state_image.clip(state),\n        description: \u0027Landsat7_Min_\u0027+str + \u0027_\u0027 + year,\n        maxPixels: 499295920080,\n        scale: 30,\n        folder: \u0027LandSat7_2011__Min_RGB\u0027,\n        region: state.geometry().bounds()\n      });\n  }\n \n}"},{"id":"70ed5c99-dbca-4ff8-9fad-fb3ab2744230","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Kolkata\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"}]}